{
  "openapi": "3.1.0",
  "info": {
    "title": "body_field_with_query_params",
    "description": "## body_field_with_query_params.BookService"
  },
  "paths": {
    "/v1/publishers/{publisher}/books": {
      "post": {
        "tags": [
          "body_field_with_query_params.BookService"
        ],
        "summary": "CreateBook",
        "operationId": "body_field_with_query_params.BookService.CreateBook",
        "parameters": [
          {
            "name": "publisher",
            "in": "path",
            "description": "The publisher id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookId",
            "in": "query",
            "description": "The user-specified ID for the book.\n When using HTTP/JSON, this field is populated based on a query string\n argument, such as `?bookId=foo`. This is the fallback for fields that\n are not included in either the URI or the body.",
            "schema": {
              "type": "string",
              "title": "book_id",
              "description": "The user-specified ID for the book.\n When using HTTP/JSON, this field is populated based on a query string\n argument, such as `?bookId=foo`. This is the fallback for fields that\n are not included in either the URI or the body."
            }
          }
        ],
        "requestBody": {
          "description": "The book to create.\n When using HTTP/JSON, this field is populated based on the HTTP body,\n because of the `body: \"book\"` syntax.",
          "content": {
            "application/json": {
              "schema": {
                "title": "book",
                "description": "The book to create.\n When using HTTP/JSON, this field is populated based on the HTTP body,\n because of the `body: \"book\"` syntax.",
                "$ref": "#/components/schemas/body_field_with_query_params.Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/body_field_with_query_params.Book"
                }
              }
            }
          }
        }
      }
    },
    "/v1/authors": {
      "post": {
        "tags": [
          "body_field_with_query_params.BookService"
        ],
        "summary": "CreateAuthor",
        "description": "Test case for the coveredFields bug - nested message fields \n should not appear as query parameters when the parent message is in body",
        "operationId": "body_field_with_query_params.BookService.CreateAuthor",
        "parameters": [
          {
            "name": "authorId",
            "in": "query",
            "description": "This field should be a query parameter",
            "schema": {
              "type": "string",
              "title": "author_id",
              "description": "This field should be a query parameter"
            }
          }
        ],
        "requestBody": {
          "description": "This field should be in the body based on the HTTP annotation",
          "content": {
            "application/json": {
              "schema": {
                "title": "author_profile",
                "description": "This field should be in the body based on the HTTP annotation",
                "$ref": "#/components/schemas/body_field_with_query_params.AuthorProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/body_field_with_query_params.Author"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "body_field_with_query_params.CreateBookRequest": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "string",
            "title": "parent",
            "description": "The publisher who will publish this book.\n When using HTTP/JSON, this field is automatically populated based\n on the URI, because of the `{parent=publishers/*}` syntax."
          },
          "book": {
            "title": "book",
            "description": "The book to create.\n When using HTTP/JSON, this field is populated based on the HTTP body,\n because of the `body: \"book\"` syntax.",
            "$ref": "#/components/schemas/body_field_with_query_params.Book"
          },
          "bookId": {
            "type": "string",
            "title": "book_id",
            "description": "The user-specified ID for the book.\n When using HTTP/JSON, this field is populated based on a query string\n argument, such as `?bookId=foo`. This is the fallback for fields that\n are not included in either the URI or the body."
          }
        },
        "title": "CreateBookRequest",
        "required": [
          "parent",
          "book"
        ],
        "additionalProperties": false
      },
      "body_field_with_query_params.Book": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "title"
          },
          "author": {
            "type": "string",
            "title": "author"
          },
          "isbn": {
            "type": "string",
            "title": "isbn"
          }
        },
        "title": "Book",
        "additionalProperties": false
      },
      "body_field_with_query_params.CreateAuthorRequest": {
        "type": "object",
        "properties": {
          "authorProfile": {
            "title": "author_profile",
            "description": "This field should be in the body based on the HTTP annotation",
            "$ref": "#/components/schemas/body_field_with_query_params.AuthorProfile"
          },
          "authorId": {
            "type": "string",
            "title": "author_id",
            "description": "This field should be a query parameter"
          }
        },
        "title": "CreateAuthorRequest",
        "required": [
          "authorProfile"
        ],
        "additionalProperties": false
      },
      "body_field_with_query_params.AuthorProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "These nested fields should be in the body, not query parameters\n This is the bug case - these fields were incorrectly being added as query params"
          },
          "email": {
            "type": "string",
            "title": "email"
          },
          "biography": {
            "title": "biography",
            "$ref": "#/components/schemas/body_field_with_query_params.Biography"
          },
          "genres": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "genres"
          }
        },
        "title": "AuthorProfile",
        "additionalProperties": false
      },
      "body_field_with_query_params.Biography": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "text"
          },
          "birthDate": {
            "type": "string",
            "title": "birth_date"
          },
          "awards": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "awards"
          }
        },
        "title": "Biography",
        "additionalProperties": false
      },
      "body_field_with_query_params.Author": {
        "type": "object",
        "properties": {
          "authorId": {
            "type": "string",
            "title": "author_id"
          },
          "status": {
            "type": "string",
            "title": "status"
          },
          "profile": {
            "title": "profile",
            "$ref": "#/components/schemas/body_field_with_query_params.AuthorProfile"
          }
        },
        "title": "Author",
        "additionalProperties": false
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "body_field_with_query_params.BookService"
    }
  ]
}