{
  "openapi": "3.1.0",
  "info": {
    "title": "samples",
    "description": "## samples.Test"
  },
  "paths": {
    "/samples.Test/HealthCheck": {
      "post": {
        "tags": [
          "samples.Test"
        ],
        "summary": "HealthCheck",
        "operationId": "samples.Test.HealthCheck",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/google.protobuf.StringValue"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.protobuf.Int64Value"
                }
              }
            }
          }
        }
      }
    },
    "/samples.Test/Empty": {
      "post": {
        "tags": [
          "samples.Test"
        ],
        "summary": "Empty",
        "operationId": "samples.Test.Empty",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/google.protobuf.Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.protobuf.Empty"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "google.protobuf.NullValue": {
        "type": "string",
        "title": "NullValue",
        "enum": [
          "NULL_VALUE"
        ],
        "description": "`NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`."
      },
      "google.protobuf.Empty": {
        "type": "object",
        "description": "A generic empty message that you can re-use to avoid defining duplicated\n empty messages in your APIs. A typical example is to use it as the request\n or the response type of an API method. For instance:\n\n     service Foo {\n       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n     }"
      },
      "google.protobuf.Int64Value": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          }
        ],
        "description": "Wrapper message for `int64`.\n\n The JSON representation for `Int64Value` is JSON string."
      },
      "google.protobuf.ListValue": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/google.protobuf.Value"
            },
            "title": "values",
            "description": "Repeated field of dynamically typed values."
          }
        },
        "title": "ListValue",
        "additionalProperties": false,
        "description": "`ListValue` is a wrapper around a repeated field of values.\n\n The JSON representation for `ListValue` is JSON array."
      },
      "google.protobuf.StringValue": {
        "type": "string",
        "description": "Wrapper message for `string`.\n\n The JSON representation for `StringValue` is JSON string."
      },
      "google.protobuf.Struct": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "title": "fields",
            "additionalProperties": {
              "title": "value",
              "$ref": "#/components/schemas/google.protobuf.Value"
            },
            "description": "Unordered map of dynamically typed values."
          }
        },
        "title": "Struct",
        "additionalProperties": false,
        "description": "`Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.\n\n The JSON representation for `Struct` is JSON object."
      },
      "google.protobuf.Struct.FieldsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/google.protobuf.Value"
          }
        },
        "title": "FieldsEntry",
        "additionalProperties": false
      },
      "google.protobuf.Value": {
        "oneOf": [
          {
            "type": "null"
          },
          {
            "type": "number"
          },
          {
            "type": "string"
          },
          {
            "type": "boolean"
          },
          {
            "type": "array"
          },
          {
            "type": "object",
            "additionalProperties": true
          }
        ],
        "description": "`Value` represents a dynamically typed value which can be either\n null, a number, a string, a boolean, a recursive struct value, or a\n list of values. A producer of value is expected to set one of these\n variants. Absence of any variant indicates an error.\n\n The JSON representation for `Value` is JSON value."
      },
      "samples.GoogleValue": {
        "type": "object",
        "properties": {
          "arg": {
            "title": "arg",
            "$ref": "#/components/schemas/google.protobuf.Value"
          },
          "someList": {
            "title": "some_list",
            "$ref": "#/components/schemas/google.protobuf.ListValue"
          },
          "someStruct": {
            "title": "some_struct",
            "$ref": "#/components/schemas/google.protobuf.Struct"
          }
        },
        "title": "GoogleValue",
        "additionalProperties": false
      },
      "connect-protocol-version": {
        "type": "number",
        "title": "Connect-Protocol-Version",
        "enum": [
          1
        ],
        "description": "Define the version of the Connect protocol",
        "const": 1
      },
      "connect-timeout-header": {
        "type": "number",
        "title": "Connect-Timeout-Ms",
        "description": "Define the timeout, in ms"
      },
      "connect.error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "examples": [
              "not_found"
            ],
            "enum": [
              "canceled",
              "unknown",
              "invalid_argument",
              "deadline_exceeded",
              "not_found",
              "already_exists",
              "permission_denied",
              "resource_exhausted",
              "failed_precondition",
              "aborted",
              "out_of_range",
              "unimplemented",
              "internal",
              "unavailable",
              "data_loss",
              "unauthenticated"
            ],
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
          },
          "detail": {
            "$ref": "#/components/schemas/google.protobuf.Any"
          }
        },
        "title": "Connect Error",
        "additionalProperties": true,
        "description": "Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation"
      },
      "google.protobuf.Any": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "binary"
          },
          "debug": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message."
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "samples.Test"
    }
  ]
}