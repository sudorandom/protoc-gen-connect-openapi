{
  "openapi": "3.1.0",
  "info": {
    "title": "buf.validate.conformance.cases"
  },
  "paths": {},
  "components": {
    "schemas": {
      "buf.validate.conformance.cases.StringAddress": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "address",
            "description": "string.address = true // value must be a valid hostname, or ip address\nstring.address_empty = true // value is empty, which is not a valid hostname, or ip address\n"
          }
        },
        "title": "StringAddress",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringConst": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.const = \"foo\"\n",
            "const": "foo"
          }
        },
        "title": "StringConst",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringContains": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.contains = \"bar\"\n"
          }
        },
        "title": "StringContains",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringEmail": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "email",
            "description": "string.email = true // value must be a valid email address\nstring.email_empty = true // value is empty, which is not a valid email address\n"
          }
        },
        "title": "StringEmail",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringEqualMinMaxBytes": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.max_bytes = 4\nstring.min_bytes = 4\n"
          }
        },
        "title": "StringEqualMinMaxBytes",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringEqualMinMaxLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "maxLength": 5,
            "minLength": 5,
            "description": "string.max_len = 5\nstring.min_len = 5\n"
          }
        },
        "title": "StringEqualMinMaxLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringExample": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "examples": [
              "foo"
            ],
            "title": "val",
            "description": "string.example = [\"foo\"]\n"
          }
        },
        "title": "StringExample",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringHostAndOptionalPort": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.host_and_port.optional_port // value must be a host and (optional) port pair\n"
          }
        },
        "title": "StringHostAndOptionalPort",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringHostAndPort": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.host_and_port = true // value must be a valid host (hostname or IP address) and port pair\nstring.host_and_port_empty = true // value is empty, which is not a valid host and port pair\n"
          }
        },
        "title": "StringHostAndPort",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringHostname": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "hostname",
            "description": "string.hostname = true // value must be a valid hostname\nstring.hostname_empty = true // value is empty, which is not a valid hostname\n"
          }
        },
        "title": "StringHostname",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringHttpHeaderName": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.well_known_regex.header_name = KNOWN_REGEX_HTTP_HEADER_NAME // value must be a valid HTTP header name\nstring.well_known_regex.header_name_empty = KNOWN_REGEX_HTTP_HEADER_NAME // value is empty, which is not a valid HTTP header name\nstring.well_known_regex.header_value = KNOWN_REGEX_HTTP_HEADER_NAME // value must be a valid HTTP header value\n"
          }
        },
        "title": "StringHttpHeaderName",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringHttpHeaderNameLoose": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.well_known_regex.header_name = KNOWN_REGEX_HTTP_HEADER_NAME // value must be a valid HTTP header name\nstring.well_known_regex.header_name_empty = KNOWN_REGEX_HTTP_HEADER_NAME // value is empty, which is not a valid HTTP header name\nstring.well_known_regex.header_value = KNOWN_REGEX_HTTP_HEADER_NAME // value must be a valid HTTP header value\n"
          }
        },
        "title": "StringHttpHeaderNameLoose",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringHttpHeaderValue": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.well_known_regex.header_name = KNOWN_REGEX_HTTP_HEADER_VALUE // value must be a valid HTTP header name\nstring.well_known_regex.header_name_empty = KNOWN_REGEX_HTTP_HEADER_VALUE // value is empty, which is not a valid HTTP header name\nstring.well_known_regex.header_value = KNOWN_REGEX_HTTP_HEADER_VALUE // value must be a valid HTTP header value\n"
          }
        },
        "title": "StringHttpHeaderValue",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringHttpHeaderValueLoose": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.well_known_regex.header_name = KNOWN_REGEX_HTTP_HEADER_VALUE // value must be a valid HTTP header name\nstring.well_known_regex.header_name_empty = KNOWN_REGEX_HTTP_HEADER_VALUE // value is empty, which is not a valid HTTP header name\nstring.well_known_regex.header_value = KNOWN_REGEX_HTTP_HEADER_VALUE // value must be a valid HTTP header value\n"
          }
        },
        "title": "StringHttpHeaderValueLoose",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIP": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "ip",
            "description": "string.ip = true // value must be a valid IP address\nstring.ip_empty = true // value is empty, which is not a valid IP address\n"
          }
        },
        "title": "StringIP",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIPPrefix": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ip_prefix = true // value must be a valid IP prefix\nstring.ip_prefix_empty = true // value is empty, which is not a valid IP prefix\n"
          }
        },
        "title": "StringIPPrefix",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIPWithPrefixLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ip_with_prefixlen = true // value must be a valid IP prefix\nstring.ip_with_prefixlen_empty = true // value is empty, which is not a valid IP prefix\n"
          }
        },
        "title": "StringIPWithPrefixLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIPv4": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "ipv4",
            "description": "string.ipv4 = true // value must be a valid IPv4 address\nstring.ipv4_empty = true // value is empty, which is not a valid IPv4 address\n"
          }
        },
        "title": "StringIPv4",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIPv4Prefix": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv4_prefix = true // value must be a valid IPv4 prefix\nstring.ipv4_prefix_empty = true // value is empty, which is not a valid IPv4 prefix\n"
          }
        },
        "title": "StringIPv4Prefix",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIPv4WithPrefixLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv4_with_prefixlen = true // value must be a valid IPv4 address with prefix length\nstring.ipv4_with_prefixlen_empty = true // value is empty, which is not a valid IPv4 address with prefix length\n"
          }
        },
        "title": "StringIPv4WithPrefixLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIPv6": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "ipv6",
            "description": "string.ipv6 = true // value must be a valid IPv6 address\nstring.ipv6_empty = true // value is empty, which is not a valid IPv6 address\n"
          }
        },
        "title": "StringIPv6",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIPv6Prefix": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv6_prefix = true // value must be a valid IPv6 prefix\nstring.ipv6_prefix_empty = true // value is empty, which is not a valid IPv6 prefix\n"
          }
        },
        "title": "StringIPv6Prefix",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIPv6WithPrefixLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv6_with_prefixlen = true // value must be a valid IPv6 address with prefix length\nstring.ipv6_with_prefixlen_empty = true // value is empty, which is not a valid IPv6 address with prefix length\n"
          }
        },
        "title": "StringIPv6WithPrefixLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringIn": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "enum": [
              "bar",
              "baz"
            ],
            "description": "string.in = [\"bar\", \"baz\"]\n"
          }
        },
        "title": "StringIn",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringInOneof": {
        "type": "object",
        "oneOf": [
          {
            "properties": {
              "bar": {
                "type": "string",
                "title": "bar",
                "enum": [
                  "a",
                  "b"
                ],
                "description": "string.in = [\"a\", \"b\"]\n"
              }
            },
            "title": "bar",
            "required": [
              "bar"
            ]
          }
        ],
        "title": "StringInOneof",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "maxLength": 3,
            "minLength": 3,
            "description": "string.len = 3\n"
          }
        },
        "title": "StringLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringLenBytes": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.len_bytes = 4\n"
          }
        },
        "title": "StringLenBytes",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringMaxBytes": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.max_bytes = 8\n"
          }
        },
        "title": "StringMaxBytes",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringMaxLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "maxLength": 5,
            "description": "string.max_len = 5\n"
          }
        },
        "title": "StringMaxLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringMinBytes": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.min_bytes = 4\n"
          }
        },
        "title": "StringMinBytes",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringMinLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "minLength": 3,
            "description": "string.min_len = 3\n"
          }
        },
        "title": "StringMinLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringMinMaxBytes": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.max_bytes = 8\nstring.min_bytes = 4\n"
          }
        },
        "title": "StringMinMaxBytes",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringMinMaxLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "maxLength": 5,
            "minLength": 3,
            "description": "string.max_len = 5\nstring.min_len = 3\n"
          }
        },
        "title": "StringMinMaxLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNone": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val"
          }
        },
        "title": "StringNone",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotAddress": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.address = false // value must be a valid hostname, or ip address\nstring.address_empty = false // value is empty, which is not a valid hostname, or ip address\n"
          }
        },
        "title": "StringNotAddress",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotContains": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.not_contains = \"bar\"\n"
          }
        },
        "title": "StringNotContains",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotEmail": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.email = false // value must be a valid email address\nstring.email_empty = false // value is empty, which is not a valid email address\n"
          }
        },
        "title": "StringNotEmail",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotHostname": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.hostname = false // value must be a valid hostname\nstring.hostname_empty = false // value is empty, which is not a valid hostname\n"
          }
        },
        "title": "StringNotHostname",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIP": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ip = false // value must be a valid IP address\nstring.ip_empty = false // value is empty, which is not a valid IP address\n"
          }
        },
        "title": "StringNotIP",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIPPrefix": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ip_prefix = false // value must be a valid IP prefix\nstring.ip_prefix_empty = false // value is empty, which is not a valid IP prefix\n"
          }
        },
        "title": "StringNotIPPrefix",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIPWithPrefixLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ip_with_prefixlen = false // value must be a valid IP prefix\nstring.ip_with_prefixlen_empty = false // value is empty, which is not a valid IP prefix\n"
          }
        },
        "title": "StringNotIPWithPrefixLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIPv4": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv4 = false // value must be a valid IPv4 address\nstring.ipv4_empty = false // value is empty, which is not a valid IPv4 address\n"
          }
        },
        "title": "StringNotIPv4",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIPv4Prefix": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv4_prefix = false // value must be a valid IPv4 prefix\nstring.ipv4_prefix_empty = false // value is empty, which is not a valid IPv4 prefix\n"
          }
        },
        "title": "StringNotIPv4Prefix",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIPv4WithPrefixLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv4_with_prefixlen = false // value must be a valid IPv4 address with prefix length\nstring.ipv4_with_prefixlen_empty = false // value is empty, which is not a valid IPv4 address with prefix length\n"
          }
        },
        "title": "StringNotIPv4WithPrefixLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIPv6": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv6 = false // value must be a valid IPv6 address\nstring.ipv6_empty = false // value is empty, which is not a valid IPv6 address\n"
          }
        },
        "title": "StringNotIPv6",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIPv6Prefix": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv6_prefix = false // value must be a valid IPv6 prefix\nstring.ipv6_prefix_empty = false // value is empty, which is not a valid IPv6 prefix\n"
          }
        },
        "title": "StringNotIPv6Prefix",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIPv6WithPrefixLen": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.ipv6_with_prefixlen = false // value must be a valid IPv6 address with prefix length\nstring.ipv6_with_prefixlen_empty = false // value is empty, which is not a valid IPv6 address with prefix length\n"
          }
        },
        "title": "StringNotIPv6WithPrefixLen",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotIn": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "not": {
              "type": "string",
              "enum": [
                "fizz",
                "buzz"
              ]
            },
            "title": "val",
            "description": "string.not_in = [\"fizz\", \"buzz\"]\n"
          }
        },
        "title": "StringNotIn",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotTUUID": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.tuuid = false // value must be a valid trimmed UUID\nstring.tuuid_empty = false // value is empty, which is not a valid trimmed UUID\n"
          }
        },
        "title": "StringNotTUUID",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotURI": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.uri = false // value must be a valid URI\nstring.uri_empty = false // value is empty, which is not a valid URI\n"
          }
        },
        "title": "StringNotURI",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotURIRef": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.uri_ref = false // value must be a valid URI Reference\n"
          }
        },
        "title": "StringNotURIRef",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringNotUUID": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.uuid = false // value must be a valid UUID\nstring.uuid_empty = false // value is empty, which is not a valid UUID\n"
          }
        },
        "title": "StringNotUUID",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringPattern": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "pattern": "(?i)^[a-z0-9]+$",
            "description": "string.pattern = \"(?i)^[a-z0-9]+$\"\n"
          }
        },
        "title": "StringPattern",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringPatternEscapes": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "pattern": "\\* \\\\ \\w",
            "description": "string.pattern = \"\\\\* \\\\\\\\ \\\\w\"\n"
          }
        },
        "title": "StringPatternEscapes",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringPrefix": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.prefix = \"foo\"\n"
          }
        },
        "title": "StringPrefix",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringSuffix": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.suffix = \"baz\"\n"
          }
        },
        "title": "StringSuffix",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringTUUID": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "description": "string.tuuid = true // value must be a valid trimmed UUID\nstring.tuuid_empty = true // value is empty, which is not a valid trimmed UUID\n"
          }
        },
        "title": "StringTUUID",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringURI": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "uri",
            "description": "string.uri = true // value must be a valid URI\nstring.uri_empty = true // value is empty, which is not a valid URI\n"
          }
        },
        "title": "StringURI",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringURIRef": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "uri-ref",
            "description": "string.uri_ref = true // value must be a valid URI Reference\n"
          }
        },
        "title": "StringURIRef",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringUUID": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "uuid",
            "description": "string.uuid = true // value must be a valid UUID\nstring.uuid_empty = true // value is empty, which is not a valid UUID\n"
          }
        },
        "title": "StringUUID",
        "additionalProperties": false
      },
      "buf.validate.conformance.cases.StringUUIDIgnore": {
        "type": "object",
        "properties": {
          "val": {
            "type": "string",
            "title": "val",
            "format": "uuid",
            "description": "string.uuid = true // value must be a valid UUID\nstring.uuid_empty = true // value is empty, which is not a valid UUID\n"
          }
        },
        "title": "StringUUIDIgnore",
        "additionalProperties": false
      }
    }
  },
  "security": []
}