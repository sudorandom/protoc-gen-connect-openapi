openapi: 3.1.0
info:
  title: field_behavior
paths:
  /v1/{user_id}:
    get:
      tags:
        - field_behavior.Service
      summary: Method
      operationId: field_behavior.Service.Method
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: user_id
            format: int32
            description: '(IDENTIFIER) '
            readOnly: true
        - name: name
          in: query
          schema:
            type: string
            title: name
        - name: password
          in: query
          schema:
            type: string
            title: password
            writeOnly: true
        - name: nickName
          in: query
          schema:
            type: string
            title: nick_name
            description: '(OPTIONAL) '
        - name: internalId
          in: query
          schema:
            type: string
            title: internal_id
            description: '(IMMUTABLE) '
        - name: otherAttr
          in: query
          schema:
            type: array
            items:
              type: string
              description: '(UNORDERED_LIST) '
            title: other_attr
            description: '(UNORDERED_LIST) '
        - name: allBehaviors
          in: query
          schema:
            type: string
            title: all_behaviors
            description: '(IDENTIFIER) (OPTIONAL) (NON_EMPTY_DEFAULT) (UNORDERED_LIST) (IMMUTABLE) (OPTIONAL) '
            readOnly: true
            writeOnly: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/field_behavior.User'
components:
  schemas:
    field_behavior.User:
      type: object
      properties:
        name:
          type: string
          title: name
        userId:
          type: integer
          title: user_id
          format: int32
          description: '(IDENTIFIER) '
          readOnly: true
        password:
          type: string
          title: password
          writeOnly: true
        nickName:
          type: string
          title: nick_name
          description: '(OPTIONAL) '
        internalId:
          type: string
          title: internal_id
          description: '(IMMUTABLE) '
        otherAttr:
          type: array
          items:
            type: string
            description: '(UNORDERED_LIST) '
          title: other_attr
          description: '(UNORDERED_LIST) '
        allBehaviors:
          type: string
          title: all_behaviors
          description: '(IDENTIFIER) (OPTIONAL) (NON_EMPTY_DEFAULT) (UNORDERED_LIST) (IMMUTABLE) (OPTIONAL) '
          readOnly: true
          writeOnly: true
      title: User
      required:
        - name
        - all_behaviors
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: field_behavior.Service
