{
  "openapi": "3.1.0",
  "info": {
    "title": "googleapi_withbody",
    "description": "## googleapi_withbody.FooService"
  },
  "paths": {
    "/v1/sendData": {
      "post": {
        "tags": [
          "googleapi_withbody.FooService"
        ],
        "summary": "GetFoo",
        "operationId": "googleapi_withbody.FooService.GetFoo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "data",
                "$ref": "#/components/schemas/googleapi_withbody.SomethingData"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googleapi_withbody.GetFooResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sendData2": {
      "post": {
        "tags": [
          "googleapi_withbody.FooService"
        ],
        "summary": "GetFoo2",
        "operationId": "googleapi_withbody.FooService.GetFoo2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "prop1"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googleapi_withbody.GetFooResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "googleapi_withbody.GetFooRequest": {
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "$ref": "#/components/schemas/googleapi_withbody.SomethingData"
          }
        },
        "title": "GetFooRequest",
        "additionalProperties": false
      },
      "googleapi_withbody.GetFooResponse": {
        "type": "object",
        "title": "GetFooResponse",
        "additionalProperties": false
      },
      "googleapi_withbody.SomethingData": {
        "type": "object",
        "properties": {
          "prop1": {
            "type": "string",
            "title": "prop1"
          },
          "prop2": {
            "type": "string",
            "title": "prop2"
          },
          "prop3": {
            "type": "string",
            "title": "prop3"
          }
        },
        "title": "SomethingData",
        "additionalProperties": false
      },
      "connect-protocol-version": {
        "type": "number",
        "title": "Connect-Protocol-Version",
        "enum": [
          1
        ],
        "description": "Define the version of the Connect protocol",
        "const": 1
      },
      "connect-timeout-header": {
        "type": "number",
        "title": "Connect-Timeout-Ms",
        "description": "Define the timeout, in ms"
      },
      "connect.error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "examples": [
              "not_found"
            ],
            "enum": [
              "canceled",
              "unknown",
              "invalid_argument",
              "deadline_exceeded",
              "not_found",
              "already_exists",
              "permission_denied",
              "resource_exhausted",
              "failed_precondition",
              "aborted",
              "out_of_range",
              "unimplemented",
              "internal",
              "unavailable",
              "data_loss",
              "unauthenticated"
            ],
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
          },
          "detail": {
            "$ref": "#/components/schemas/google.protobuf.Any"
          }
        },
        "title": "Connect Error",
        "additionalProperties": true,
        "description": "Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation"
      },
      "google.protobuf.Any": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "binary"
          },
          "debug": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message."
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "googleapi_withbody.FooService"
    }
  ]
}