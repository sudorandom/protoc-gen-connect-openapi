openapi: 3.1.0
info:
  title: test.v1
paths: {}
components:
  schemas:
    google.protobuf.NullValue:
      type: string
      title: NullValue
      enum:
        - NULL_VALUE
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
         `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.
    test.v1.AllTypes.Enum:
      type: string
      title: Enum
      enum:
        - ENUM_UNSPECIFIED
        - ENUM_ONE
        - ENUM_TWO
      description: named types
    test.v1.ParameterValues.Enum:
      type: string
      title: Enum
      enum:
        - ENUM_UNSPECIFIED
        - ENUM_VALUE
      description: enum types
    test.v1.ParameterValues.Nested.Enum:
      type: string
      title: Enum
      enum:
        - ENUM_UNSPECIFIED
        - ENUM_VALUE
    google.protobuf.BoolValue:
      type: boolean
      description: |-
        Wrapper message for `bool`.

         The JSON representation for `BoolValue` is JSON `true` and `false`.
    google.protobuf.BytesValue:
      type: string
      format: binary
      description: |-
        Wrapper message for `bytes`.

         The JSON representation for `BytesValue` is JSON string.
    google.protobuf.DoubleValue:
      oneOf:
        - type: string
        - type: number
      description: |-
        Wrapper message for `double`.

         The JSON representation for `DoubleValue` is JSON number.
    google.protobuf.Duration:
      type: string
      pattern: ^[-\+]?([0-9]+\.?[0-9]*|\.[0-9]+)s$
      format: regex
      description: |-
        A Duration represents a signed, fixed-length span of time represented
         as a count of seconds and fractions of seconds at nanosecond
         resolution. It is independent of any calendar and concepts like "day"
         or "month". It is related to Timestamp in that the difference between
         two Timestamp values is a Duration and it can be added or subtracted
         from a Timestamp. Range is approximately +-10,000 years.

         # Examples

         Example 1: Compute Duration from two Timestamps in pseudo code.

             Timestamp start = ...;
             Timestamp end = ...;
             Duration duration = ...;

             duration.seconds = end.seconds - start.seconds;
             duration.nanos = end.nanos - start.nanos;

             if (duration.seconds < 0 && duration.nanos > 0) {
               duration.seconds += 1;
               duration.nanos -= 1000000000;
             } else if (duration.seconds > 0 && duration.nanos < 0) {
               duration.seconds -= 1;
               duration.nanos += 1000000000;
             }

         Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.

             Timestamp start = ...;
             Duration duration = ...;
             Timestamp end = ...;

             end.seconds = start.seconds + duration.seconds;
             end.nanos = start.nanos + duration.nanos;

             if (end.nanos < 0) {
               end.seconds -= 1;
               end.nanos += 1000000000;
             } else if (end.nanos >= 1000000000) {
               end.seconds += 1;
               end.nanos -= 1000000000;
             }

         Example 3: Compute Duration from datetime.timedelta in Python.

             td = datetime.timedelta(days=3, minutes=10)
             duration = Duration()
             duration.FromTimedelta(td)

         # JSON Mapping

         In JSON format, the Duration type is encoded as a string rather than an
         object, where the string ends in the suffix "s" (indicating seconds) and
         is preceded by the number of seconds, with nanoseconds expressed as
         fractional seconds. For example, 3 seconds with 0 nanoseconds should be
         encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should
         be expressed in JSON format as "3.000000001s", and 3 seconds and 1
         microsecond should be expressed in JSON format as "3.000001s".
    google.protobuf.FieldMask:
      type: object
      properties:
        paths:
          type: array
          items:
            type: string
          title: paths
          description: The set of field mask paths.
      title: FieldMask
      additionalProperties: false
      description: |-
        `FieldMask` represents a set of symbolic field paths, for example:

             paths: "f.a"
             paths: "f.b.d"

         Here `f` represents a field in some root message, `a` and `b`
         fields in the message found in `f`, and `d` a field found in the
         message in `f.b`.

         Field masks are used to specify a subset of fields that should be
         returned by a get operation or modified by an update operation.
         Field masks also have a custom JSON encoding (see below).

         # Field Masks in Projections

         When used in the context of a projection, a response message or
         sub-message is filtered by the API to only contain those fields as
         specified in the mask. For example, if the mask in the previous
         example is applied to a response message as follows:

             f {
               a : 22
               b {
                 d : 1
                 x : 2
               }
               y : 13
             }
             z: 8

         The result will not contain specific values for fields x,y and z
         (their value will be set to the default, and omitted in proto text
         output):


             f {
               a : 22
               b {
                 d : 1
               }
             }

         A repeated field is not allowed except at the last position of a
         paths string.

         If a FieldMask object is not present in a get operation, the
         operation applies to all fields (as if a FieldMask of all fields
         had been specified).

         Note that a field mask does not necessarily apply to the
         top-level response message. In case of a REST get operation, the
         field mask applies directly to the response, but in case of a REST
         list operation, the mask instead applies to each individual message
         in the returned resource list. In case of a REST custom method,
         other definitions may be used. Where the mask applies will be
         clearly documented together with its declaration in the API.  In
         any case, the effect on the returned resource/resources is required
         behavior for APIs.

         # Field Masks in Update Operations

         A field mask in update operations specifies which fields of the
         targeted resource are going to be updated. The API is required
         to only change the values of the fields as specified in the mask
         and leave the others untouched. If a resource is passed in to
         describe the updated values, the API ignores the values of all
         fields not covered by the mask.

         If a repeated field is specified for an update operation, new values will
         be appended to the existing repeated field in the target resource. Note that
         a repeated field is only allowed in the last position of a `paths` string.

         If a sub-message is specified in the last position of the field mask for an
         update operation, then new value will be merged into the existing sub-message
         in the target resource.

         For example, given the target message:

             f {
               b {
                 d: 1
                 x: 2
               }
               c: [1]
             }

         And an update message:

             f {
               b {
                 d: 10
               }
               c: [2]
             }

         then if the field mask is:

          paths: ["f.b", "f.c"]

         then the result will be:

             f {
               b {
                 d: 10
                 x: 2
               }
               c: [1, 2]
             }

         An implementation may provide options to override this default behavior for
         repeated and message fields.

         In order to reset a field's value to the default, the field must
         be in the mask and set to the default value in the provided resource.
         Hence, in order to reset all fields of a resource, provide a default
         instance of the resource and set all fields in the mask, or do
         not provide a mask as described below.

         If a field mask is not present on update, the operation applies to
         all fields (as if a field mask of all fields has been specified).
         Note that in the presence of schema evolution, this may mean that
         fields the client does not know and has therefore not filled into
         the request will be reset to their default. If this is unwanted
         behavior, a specific service may require a client to always specify
         a field mask, producing an error if not.

         As with get operations, the location of the resource which
         describes the updated values in the request message depends on the
         operation kind. In any case, the effect of the field mask is
         required to be honored by the API.

         ## Considerations for HTTP REST

         The HTTP kind of an update operation which uses a field mask must
         be set to PATCH instead of PUT in order to satisfy HTTP semantics
         (PUT must only be used for full updates).

         # JSON Encoding of Field Masks

         In JSON, a field mask is encoded as a single string where paths are
         separated by a comma. Fields name in each path are converted
         to/from lower-camel naming conventions.

         As an example, consider the following message declarations:

             message Profile {
               User user = 1;
               Photo photo = 2;
             }
             message User {
               string display_name = 1;
               string address = 2;
             }

         In proto a field mask for `Profile` may look as such:

             mask {
               paths: "user.display_name"
               paths: "photo"
             }

         In JSON, the same mask is represented as below:

             {
               mask: "user.displayName,photo"
             }

         # Field Masks and Oneof Fields

         Field masks treat fields in oneofs just as regular fields. Consider the
         following message:

             message SampleMessage {
               oneof test_oneof {
                 string name = 4;
                 SubMessage sub_message = 9;
               }
             }

         The field mask can be:

             mask {
               paths: "name"
             }

         Or:

             mask {
               paths: "sub_message"
             }

         Note that oneof type names ("test_oneof" in this case) cannot be used in
         paths.

         ## Field Mask Verification

         The implementation of any API method which has a FieldMask type field in the
         request should verify the included field paths, and return an
         `INVALID_ARGUMENT` error if any path is unmappable.
    google.protobuf.FloatValue:
      oneOf:
        - type: string
        - type: number
      description: |-
        Wrapper message for `float`.

         The JSON representation for `FloatValue` is JSON number.
    google.protobuf.Int32Value:
      type: number
      description: |-
        Wrapper message for `int32`.

         The JSON representation for `Int32Value` is JSON number.
    google.protobuf.Int64Value:
      oneOf:
        - type: string
        - type: number
      description: |-
        Wrapper message for `int64`.

         The JSON representation for `Int64Value` is JSON string.
    google.protobuf.ListValue:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Value'
          title: values
          description: Repeated field of dynamically typed values.
      title: ListValue
      additionalProperties: false
      description: |-
        `ListValue` is a wrapper around a repeated field of values.

         The JSON representation for `ListValue` is JSON array.
    google.protobuf.StringValue:
      type: string
      description: |-
        Wrapper message for `string`.

         The JSON representation for `StringValue` is JSON string.
    google.protobuf.Struct:
      type: object
      properties:
        fields:
          type: object
          title: fields
          additionalProperties:
            allOf:
              - title: value
              - $ref: '#/components/schemas/google.protobuf.Value'
          description: Unordered map of dynamically typed values.
      title: Struct
      additionalProperties: false
      description: |-
        `Struct` represents a structured data value, consisting of fields
         which map to dynamically typed values. In some languages, `Struct`
         might be supported by a native representation. For example, in
         scripting languages like JS a struct is represented as an
         object. The details of that representation are described together
         with the proto support for the language.

         The JSON representation for `Struct` is JSON object.
    google.protobuf.Struct.FieldsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          allOf:
            - title: value
            - $ref: '#/components/schemas/google.protobuf.Value'
      title: FieldsEntry
      additionalProperties: false
    google.protobuf.Timestamp:
      type: string
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    google.protobuf.UInt32Value:
      type: object
      properties:
        value:
          type: integer
          title: value
          description: The uint32 value.
      title: UInt32Value
      additionalProperties: false
      description: |-
        Wrapper message for `uint32`.

         The JSON representation for `UInt32Value` is JSON number.
    google.protobuf.UInt64Value:
      type: object
      properties:
        value:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: value
          description: The uint64 value.
      title: UInt64Value
      additionalProperties: false
      description: |-
        Wrapper message for `uint64`.

         The JSON representation for `UInt64Value` is JSON string.
    google.protobuf.Value:
      oneOf:
        - type: "null"
        - type: number
        - type: string
        - type: boolean
        - type: array
        - type: object
          additionalProperties: true
      description: |-
        `Value` represents a dynamically typed value which can be either
         null, a number, a string, a boolean, a recursive struct value, or a
         list of values. A producer of value is expected to set one of these
         variants. Absence of any variant indicates an error.

         The JSON representation for `Value` is JSON value.
    test.v1.AllTypes:
      type: object
      allOf:
        - anyOf:
            - required:
                - optBoolValue
            - not:
                anyOf:
                  - required:
                      - optBoolValue
        - anyOf:
            - required:
                - optBytesValue
            - not:
                anyOf:
                  - required:
                      - optBytesValue
        - anyOf:
            - required:
                - optDoubleValue
            - not:
                anyOf:
                  - required:
                      - optDoubleValue
        - anyOf:
            - required:
                - optEnumValue
            - not:
                anyOf:
                  - required:
                      - optEnumValue
        - anyOf:
            - required:
                - optFixed32Value
            - not:
                anyOf:
                  - required:
                      - optFixed32Value
        - anyOf:
            - required:
                - optFixed64Value
            - not:
                anyOf:
                  - required:
                      - optFixed64Value
        - anyOf:
            - required:
                - optFloatValue
            - not:
                anyOf:
                  - required:
                      - optFloatValue
        - anyOf:
            - required:
                - optInt32Value
            - not:
                anyOf:
                  - required:
                      - optInt32Value
        - anyOf:
            - required:
                - optInt64Value
            - not:
                anyOf:
                  - required:
                      - optInt64Value
        - anyOf:
            - required:
                - optMsgValue
            - not:
                anyOf:
                  - required:
                      - optMsgValue
        - anyOf:
            - required:
                - optSfixed32Value
            - not:
                anyOf:
                  - required:
                      - optSfixed32Value
        - anyOf:
            - required:
                - optSfixed64Value
            - not:
                anyOf:
                  - required:
                      - optSfixed64Value
        - anyOf:
            - required:
                - optSint32Value
            - not:
                anyOf:
                  - required:
                      - optSint32Value
        - anyOf:
            - required:
                - optSint64Value
            - not:
                anyOf:
                  - required:
                      - optSint64Value
        - anyOf:
            - required:
                - optStringValue
            - not:
                anyOf:
                  - required:
                      - optStringValue
        - anyOf:
            - required:
                - optUint32Value
            - not:
                anyOf:
                  - required:
                      - optUint32Value
        - anyOf:
            - required:
                - optUint64Value
            - not:
                anyOf:
                  - required:
                      - optUint64Value
        - anyOf:
            - required:
                - boolOption
            - required:
                - bytesOption
            - required:
                - doubleOption
            - required:
                - enumOption
            - required:
                - fixed32Option
            - required:
                - fixed64Option
            - required:
                - floatOption
            - required:
                - int32Option
            - required:
                - int64Option
            - required:
                - msgOption
            - required:
                - sfixed32Option
            - required:
                - sfixed64Option
            - required:
                - sint32Option
            - required:
                - sint64Option
            - required:
                - stringOption
            - required:
                - uint32Option
            - required:
                - uint64Option
            - not:
                anyOf:
                  - required:
                      - boolOption
                  - required:
                      - bytesOption
                  - required:
                      - doubleOption
                  - required:
                      - enumOption
                  - required:
                      - fixed32Option
                  - required:
                      - fixed64Option
                  - required:
                      - floatOption
                  - required:
                      - int32Option
                  - required:
                      - int64Option
                  - required:
                      - msgOption
                  - required:
                      - sfixed32Option
                  - required:
                      - sfixed64Option
                  - required:
                      - sint32Option
                  - required:
                      - sint64Option
                  - required:
                      - stringOption
                  - required:
                      - uint32Option
                  - required:
                      - uint64Option
      properties:
        doubleValue:
          type: number
          title: double_value
          format: double
          description: scalar types
        floatValue:
          type: number
          title: float_value
          format: float
        int32Value:
          type: integer
          title: int32_value
          format: int32
        int64Value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: int64_value
        uint32Value:
          type: integer
          title: uint32_value
        uint64Value:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: uint64_value
        sint32Value:
          type: integer
          title: sint32_value
          format: int32
        sint64Value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: sint64_value
        fixed32Value:
          type: integer
          title: fixed32_value
        fixed64Value:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: fixed64_value
        sfixed32Value:
          type: integer
          title: sfixed32_value
          format: int32
        sfixed64Value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: sfixed64_value
        boolValue:
          type: boolean
          title: bool_value
        stringValue:
          type: string
          title: string_value
        bytesValue:
          type: string
          title: bytes_value
          format: byte
        doubleList:
          type: array
          items:
            type: number
            format: double
          title: double_list
          description: repeated types
        floatList:
          type: array
          items:
            type: number
            format: float
          title: float_list
        int32List:
          type: array
          items:
            type: integer
            format: int32
          title: int32_list
        int64List:
          type: array
          items:
            oneOf:
              - type: integer
                title: integer
                format: int64
              - type: string
                title: string
          title: int64_list
        uint32List:
          type: array
          items:
            type: integer
          title: uint32_list
        uint64List:
          type: array
          items:
            oneOf:
              - type: integer
                title: integer
              - type: string
                title: string
          title: uint64_list
        sint32List:
          type: array
          items:
            type: integer
            format: int32
          title: sint32_list
        sint64List:
          type: array
          items:
            oneOf:
              - type: integer
                title: integer
                format: int64
              - type: string
                title: string
          title: sint64_list
        fixed32List:
          type: array
          items:
            type: integer
          title: fixed32_list
        fixed64List:
          type: array
          items:
            oneOf:
              - type: integer
                title: integer
              - type: string
                title: string
          title: fixed64_list
        sfixed32List:
          type: array
          items:
            type: integer
            format: int32
          title: sfixed32_list
        sfixed64List:
          type: array
          items:
            oneOf:
              - type: integer
                title: integer
                format: int64
              - type: string
                title: string
          title: sfixed64_list
        boolList:
          type: array
          items:
            type: boolean
          title: bool_list
        stringList:
          type: array
          items:
            type: string
          title: string_list
        bytesList:
          type: array
          items:
            type: string
            format: byte
          title: bytes_list
        int32ToStringMap:
          type: object
          title: int32_to_string_map
          additionalProperties:
            type: string
            title: value
          description: map key types
        int64ToStringMap:
          type: object
          title: int64_to_string_map
          additionalProperties:
            type: string
            title: value
        uint32ToStringMap:
          type: object
          title: uint32_to_string_map
          additionalProperties:
            type: string
            title: value
        uint64ToStringMap:
          type: object
          title: uint64_to_string_map
          additionalProperties:
            type: string
            title: value
        sint32ToStringMap:
          type: object
          title: sint32_to_string_map
          additionalProperties:
            type: string
            title: value
        sint64ToStringMap:
          type: object
          title: sint64_to_string_map
          additionalProperties:
            type: string
            title: value
        fixed32ToStringMap:
          type: object
          title: fixed32_to_string_map
          additionalProperties:
            type: string
            title: value
        fixed64ToStringMap:
          type: object
          title: fixed64_to_string_map
          additionalProperties:
            type: string
            title: value
        sfixed32ToStringMap:
          type: object
          title: sfixed32_to_string_map
          additionalProperties:
            type: string
            title: value
        sfixed64ToStringMap:
          type: object
          title: sfixed64_to_string_map
          additionalProperties:
            type: string
            title: value
        boolToStringMap:
          type: object
          title: bool_to_string_map
          additionalProperties:
            type: string
            title: value
        stringToStringMap:
          type: object
          title: string_to_string_map
          additionalProperties:
            type: string
            title: value
        doubleMap:
          type: object
          title: double_map
          additionalProperties:
            type: number
            title: value
            format: double
          description: map value types
        floatMap:
          type: object
          title: float_map
          additionalProperties:
            type: number
            title: value
            format: float
        int32Map:
          type: object
          title: int32_map
          additionalProperties:
            type: integer
            title: value
            format: int32
        int64Map:
          type: object
          title: int64_map
          additionalProperties:
            oneOf:
              - type: integer
                title: integer
                format: int64
              - type: string
                title: string
            title: value
        uint32Map:
          type: object
          title: uint32_map
          additionalProperties:
            type: integer
            title: value
        uint64Map:
          type: object
          title: uint64_map
          additionalProperties:
            oneOf:
              - type: integer
                title: integer
              - type: string
                title: string
            title: value
        sint32Map:
          type: object
          title: sint32_map
          additionalProperties:
            type: integer
            title: value
            format: int32
        sint64Map:
          type: object
          title: sint64_map
          additionalProperties:
            oneOf:
              - type: integer
                title: integer
                format: int64
              - type: string
                title: string
            title: value
        fixed32Map:
          type: object
          title: fixed32_map
          additionalProperties:
            type: integer
            title: value
        fixed64Map:
          type: object
          title: fixed64_map
          additionalProperties:
            oneOf:
              - type: integer
                title: integer
              - type: string
                title: string
            title: value
        sfixed32Map:
          type: object
          title: sfixed32_map
          additionalProperties:
            type: integer
            title: value
            format: int32
        sfixed64Map:
          type: object
          title: sfixed64_map
          additionalProperties:
            oneOf:
              - type: integer
                title: integer
                format: int64
              - type: string
                title: string
            title: value
        boolMap:
          type: object
          title: bool_map
          additionalProperties:
            type: boolean
            title: value
        stringMap:
          type: object
          title: string_map
          additionalProperties:
            type: string
            title: value
        bytesMap:
          type: object
          title: bytes_map
          additionalProperties:
            type: string
            title: value
            format: byte
        optDoubleValue:
          type: number
          title: opt_double_value
          format: double
          description: explicit presence types
        optFloatValue:
          type: number
          title: opt_float_value
          format: float
        optInt32Value:
          type: integer
          title: opt_int32_value
          format: int32
        optInt64Value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: opt_int64_value
        optUint32Value:
          type: integer
          title: opt_uint32_value
        optUint64Value:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: opt_uint64_value
        optSint32Value:
          type: integer
          title: opt_sint32_value
          format: int32
        optSint64Value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: opt_sint64_value
        optFixed32Value:
          type: integer
          title: opt_fixed32_value
        optFixed64Value:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: opt_fixed64_value
        optSfixed32Value:
          type: integer
          title: opt_sfixed32_value
          format: int32
        optSfixed64Value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: opt_sfixed64_value
        optBoolValue:
          type: boolean
          title: opt_bool_value
        optStringValue:
          type: string
          title: opt_string_value
        optBytesValue:
          type: string
          title: opt_bytes_value
          format: byte
        msgValue:
          allOf:
            - title: msg_value
            - $ref: '#/components/schemas/test.v1.AllTypes'
        enumValue:
          allOf:
            - title: enum_value
            - $ref: '#/components/schemas/test.v1.AllTypes.Enum'
        optMsgValue:
          allOf:
            - title: opt_msg_value
            - $ref: '#/components/schemas/test.v1.AllTypes'
        optEnumValue:
          allOf:
            - title: opt_enum_value
            - $ref: '#/components/schemas/test.v1.AllTypes.Enum'
        msgList:
          type: array
          items:
            $ref: '#/components/schemas/test.v1.AllTypes'
          title: msg_list
        enumList:
          type: array
          items:
            $ref: '#/components/schemas/test.v1.AllTypes.Enum'
          title: enum_list
        msgMap:
          type: object
          title: msg_map
          additionalProperties:
            allOf:
              - title: value
              - $ref: '#/components/schemas/test.v1.AllTypes'
        enumMap:
          type: object
          title: enum_map
          additionalProperties:
            allOf:
              - title: value
              - $ref: '#/components/schemas/test.v1.AllTypes.Enum'
        doubleOption:
          type: number
          title: double_option
          format: double
        floatOption:
          type: number
          title: float_option
          format: float
        int32Option:
          type: integer
          title: int32_option
          format: int32
        int64Option:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: int64_option
        uint32Option:
          type: integer
          title: uint32_option
        uint64Option:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: uint64_option
        sint32Option:
          type: integer
          title: sint32_option
          format: int32
        sint64Option:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: sint64_option
        fixed32Option:
          type: integer
          title: fixed32_option
        fixed64Option:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: fixed64_option
        sfixed32Option:
          type: integer
          title: sfixed32_option
          format: int32
        sfixed64Option:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: sfixed64_option
        boolOption:
          type: boolean
          title: bool_option
        stringOption:
          type: string
          title: string_option
        bytesOption:
          type: string
          title: bytes_option
          format: byte
        msgOption:
          allOf:
            - title: msg_option
            - $ref: '#/components/schemas/test.v1.AllTypes'
        enumOption:
          allOf:
            - title: enum_option
            - $ref: '#/components/schemas/test.v1.AllTypes.Enum'
      title: AllTypes
      additionalProperties: false
    test.v1.AllTypes.BoolMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: boolean
          title: value
      title: BoolMapEntry
      additionalProperties: false
    test.v1.AllTypes.BoolToStringMapEntry:
      type: object
      properties:
        key:
          type: boolean
          title: key
        value:
          type: string
          title: value
      title: BoolToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.BytesMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
          format: byte
      title: BytesMapEntry
      additionalProperties: false
    test.v1.AllTypes.DoubleMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: number
          title: value
          format: double
      title: DoubleMapEntry
      additionalProperties: false
    test.v1.AllTypes.EnumMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          allOf:
            - title: value
            - $ref: '#/components/schemas/test.v1.AllTypes.Enum'
      title: EnumMapEntry
      additionalProperties: false
    test.v1.AllTypes.Fixed32MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: integer
          title: value
      title: Fixed32MapEntry
      additionalProperties: false
    test.v1.AllTypes.Fixed32ToStringMapEntry:
      type: object
      properties:
        key:
          type: integer
          title: key
        value:
          type: string
          title: value
      title: Fixed32ToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.Fixed64MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: value
      title: Fixed64MapEntry
      additionalProperties: false
    test.v1.AllTypes.Fixed64ToStringMapEntry:
      type: object
      properties:
        key:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: key
        value:
          type: string
          title: value
      title: Fixed64ToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.FloatMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: number
          title: value
          format: float
      title: FloatMapEntry
      additionalProperties: false
    test.v1.AllTypes.Int32MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: integer
          title: value
          format: int32
      title: Int32MapEntry
      additionalProperties: false
    test.v1.AllTypes.Int32ToStringMapEntry:
      type: object
      properties:
        key:
          type: integer
          title: key
          format: int32
        value:
          type: string
          title: value
      title: Int32ToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.Int64MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: value
      title: Int64MapEntry
      additionalProperties: false
    test.v1.AllTypes.Int64ToStringMapEntry:
      type: object
      properties:
        key:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: key
        value:
          type: string
          title: value
      title: Int64ToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.MsgMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          allOf:
            - title: value
            - $ref: '#/components/schemas/test.v1.AllTypes'
      title: MsgMapEntry
      additionalProperties: false
    test.v1.AllTypes.Sfixed32MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: integer
          title: value
          format: int32
      title: Sfixed32MapEntry
      additionalProperties: false
    test.v1.AllTypes.Sfixed32ToStringMapEntry:
      type: object
      properties:
        key:
          type: integer
          title: key
          format: int32
        value:
          type: string
          title: value
      title: Sfixed32ToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.Sfixed64MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: value
      title: Sfixed64MapEntry
      additionalProperties: false
    test.v1.AllTypes.Sfixed64ToStringMapEntry:
      type: object
      properties:
        key:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: key
        value:
          type: string
          title: value
      title: Sfixed64ToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.Sint32MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: integer
          title: value
          format: int32
      title: Sint32MapEntry
      additionalProperties: false
    test.v1.AllTypes.Sint32ToStringMapEntry:
      type: object
      properties:
        key:
          type: integer
          title: key
          format: int32
        value:
          type: string
          title: value
      title: Sint32ToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.Sint64MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: value
      title: Sint64MapEntry
      additionalProperties: false
    test.v1.AllTypes.Sint64ToStringMapEntry:
      type: object
      properties:
        key:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: key
        value:
          type: string
          title: value
      title: Sint64ToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.StringMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: StringMapEntry
      additionalProperties: false
    test.v1.AllTypes.StringToStringMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: StringToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.Uint32MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: integer
          title: value
      title: Uint32MapEntry
      additionalProperties: false
    test.v1.AllTypes.Uint32ToStringMapEntry:
      type: object
      properties:
        key:
          type: integer
          title: key
        value:
          type: string
          title: value
      title: Uint32ToStringMapEntry
      additionalProperties: false
    test.v1.AllTypes.Uint64MapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: value
      title: Uint64MapEntry
      additionalProperties: false
    test.v1.AllTypes.Uint64ToStringMapEntry:
      type: object
      properties:
        key:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: key
        value:
          type: string
          title: value
      title: Uint64ToStringMapEntry
      additionalProperties: false
    test.v1.ParameterValues:
      type: object
      allOf:
        - anyOf:
            - required:
                - oneofDoubleValue
            - required:
                - oneofDoubleValueWrapper
            - required:
                - oneofEnumValue
            - not:
                anyOf:
                  - required:
                      - oneofDoubleValue
                  - required:
                      - oneofDoubleValueWrapper
                  - required:
                      - oneofEnumValue
      anyOf:
        - required:
            - oneofDoubleValue
        - required:
            - oneofDoubleValueWrapper
        - required:
            - oneofEnumValue
        - not:
            anyOf:
              - required:
                  - oneofDoubleValue
              - required:
                  - oneofDoubleValueWrapper
              - required:
                  - oneofEnumValue
      properties:
        doubleValue:
          type: number
          title: double_value
          format: double
          description: scalar types
        floatValue:
          type: number
          title: float_value
          format: float
        int32Value:
          type: integer
          title: int32_value
          format: int32
        int64Value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: int64_value
        uint32Value:
          type: integer
          title: uint32_value
        uint64Value:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: uint64_value
        sint32Value:
          type: integer
          title: sint32_value
          format: int32
        sint64Value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: sint64_value
        fixed32Value:
          type: integer
          title: fixed32_value
        fixed64Value:
          oneOf:
            - type: integer
              title: integer
            - type: string
              title: string
          title: fixed64_value
        sfixed32Value:
          type: integer
          title: sfixed32_value
          format: int32
        sfixed64Value:
          oneOf:
            - type: integer
              title: integer
              format: int64
            - type: string
              title: string
          title: sfixed64_value
        boolValue:
          type: boolean
          title: bool_value
        stringValue:
          type: string
          title: string_value
        bytesValue:
          type: string
          title: bytes_value
          format: byte
        timestamp:
          allOf:
            - title: timestamp
              description: scalar wrappers
            - $ref: '#/components/schemas/google.protobuf.Timestamp'
        duration:
          allOf:
            - title: duration
            - $ref: '#/components/schemas/google.protobuf.Duration'
        boolValueWrapper:
          allOf:
            - title: bool_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.BoolValue'
        int32ValueWrapper:
          allOf:
            - title: int32_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.Int32Value'
        int64ValueWrapper:
          allOf:
            - title: int64_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.Int64Value'
        uint32ValueWrapper:
          allOf:
            - title: uint32_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.UInt32Value'
        uint64ValueWrapper:
          allOf:
            - title: uint64_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.UInt64Value'
        floatValueWrapper:
          allOf:
            - title: float_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.FloatValue'
        doubleValueWrapper:
          allOf:
            - title: double_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.DoubleValue'
        bytesValueWrapper:
          allOf:
            - title: bytes_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.BytesValue'
        stringValueWrapper:
          allOf:
            - title: string_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.StringValue'
        fieldMask:
          allOf:
            - title: field_mask
            - $ref: '#/components/schemas/google.protobuf.FieldMask'
        enumValue:
          allOf:
            - title: enum_value
            - $ref: '#/components/schemas/test.v1.ParameterValues.Enum'
        enumList:
          type: array
          items:
            $ref: '#/components/schemas/test.v1.ParameterValues.Enum'
          title: enum_list
          description: complex types
        doubleList:
          type: array
          items:
            type: number
            format: double
          title: double_list
        doubleValueList:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.DoubleValue'
          title: double_value_list
        oneofDoubleValue:
          type: number
          title: oneof_double_value
          format: double
        oneofDoubleValueWrapper:
          allOf:
            - title: oneof_double_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.DoubleValue'
        oneofEnumValue:
          allOf:
            - title: oneof_enum_value
            - $ref: '#/components/schemas/test.v1.ParameterValues.Enum'
        nested:
          allOf:
            - title: nested
            - $ref: '#/components/schemas/test.v1.ParameterValues.Nested'
        recursive:
          allOf:
            - title: recursive
            - $ref: '#/components/schemas/test.v1.ParameterValues'
        stringMap:
          type: object
          title: string_map
          additionalProperties:
            type: string
            title: value
          description: unsupported
        stringValueMap:
          type: object
          title: string_value_map
          additionalProperties:
            allOf:
              - title: value
              - $ref: '#/components/schemas/google.protobuf.StringValue'
        enumMap:
          type: object
          title: enum_map
          additionalProperties:
            allOf:
              - title: value
              - $ref: '#/components/schemas/test.v1.ParameterValues.Enum'
        nestedMap:
          type: object
          title: nested_map
          additionalProperties:
            allOf:
              - title: value
              - $ref: '#/components/schemas/test.v1.ParameterValues.Nested'
        structValue:
          allOf:
            - title: struct_value
            - $ref: '#/components/schemas/google.protobuf.Struct'
        value:
          allOf:
            - title: value
            - $ref: '#/components/schemas/google.protobuf.Value'
        recursiveList:
          type: array
          items:
            $ref: '#/components/schemas/test.v1.ParameterValues'
          title: recursive_list
      title: ParameterValues
      additionalProperties: false
    test.v1.ParameterValues.EnumMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          allOf:
            - title: value
            - $ref: '#/components/schemas/test.v1.ParameterValues.Enum'
      title: EnumMapEntry
      additionalProperties: false
    test.v1.ParameterValues.Nested:
      type: object
      properties:
        doubleValue:
          type: number
          title: double_value
          format: double
        doubleValueWrapper:
          allOf:
            - title: double_value_wrapper
            - $ref: '#/components/schemas/google.protobuf.DoubleValue'
        enumValue:
          allOf:
            - title: enum_value
            - $ref: '#/components/schemas/test.v1.ParameterValues.Nested.Enum'
      title: Nested
      additionalProperties: false
    test.v1.ParameterValues.NestedMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          allOf:
            - title: value
            - $ref: '#/components/schemas/test.v1.ParameterValues.Nested'
      title: NestedMapEntry
      additionalProperties: false
    test.v1.ParameterValues.StringMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: StringMapEntry
      additionalProperties: false
    test.v1.ParameterValues.StringValueMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          allOf:
            - title: value
            - $ref: '#/components/schemas/google.protobuf.StringValue'
      title: StringValueMapEntry
      additionalProperties: false
security: []
