openapi: 3.1.0
info:
  title: with_specification_extensions.foo
  version: v1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    Oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://example.com/authorize
          scopes:
            api: Grants complete read/write access to the API
          x-defaultClientId: "123"
        authorizationCode:
          authorizationUrl: https://example.com/authorize
          tokenUrl: https://example.com/token
          scopes:
            api: Grants complete read/write access to the API
          x-usePkce: true
  schemas:
    with_specification_extensions.foo.Foo:
      type: string
      title: Foo
      enum:
        - FOO_UNSPECIFIED
        - FOO_SOMETHING
    with_specification_extensions.foo.FooRequest:
      type: object
      properties:
        bar:
          type: string
          title: bar
        foo:
          allOf:
            - title: foo
              x-enumDescriptions: {"FOO_UNSPECIFIED": "Unspecified. Default when empty", "FOO_SOMETHING": "Something"}
            - $ref: '#/components/schemas/with_specification_extensions.foo.Foo'
      title: FooRequest
      additionalProperties:
        type: string
        x-additionalPropertiesName: "Additional property name"
    with_specification_extensions.foo.FooResponse:
      type: object
      title: FooResponse
      additionalProperties: false
      x-summary: "Successful request"
      x-tags: ["Foo"]
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - CodeNotFound
          enum:
            - CodeCanceled
            - CodeUnknown
            - CodeInvalidArgument
            - CodeDeadlineExceeded
            - CodeNotFound
            - CodeAlreadyExists
            - CodePermissionDenied
            - CodeResourceExhausted
            - CodeFailedPrecondition
            - CodeAborted
            - CodeOutOfRange
            - CodeInternal
            - CodeUnavailable
            - CodeDataLoss
            - CodeUnauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security:
  - bearerAuth: []
x-tagGroups:
  - name: Size
    tags:
      - Huge
      - Tiny
  - name: Color
    tags:
      - Orange
      - Purple
      - Red
x-logo: {"url": "https://redocly.github.io/redoc/example-logo.png"}
paths:
  /with_specification_extensions.foo.FooService/Foo:
    post:
      tags:
        - with_specification_extensions.foo.FooService
      summary: Foo
      operationId: with_specification_extensions.foo.FooService.Foo
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/with_specification_extensions.foo.FooRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/with_specification_extensions.foo.FooResponse'
      security:
        - Oauth2:
            - api
      x-hideTryItPanel: true
tags:
  - name: with_specification_extensions.foo.FooService
    description: Foo 1
    x-displayName: "Foo Service"
    x-traitTag: true
  - name: Foo
    description: Foo
