openapi: 3.1.0
info:
  title: Greeting API
  description: This is a service which says hello and goodbye to you!
  contact:
    name: Derek Perez
    url: https://github.com/bufdemo/openapi-examples
    email: dperez@buf.build
  license:
    name: Apache 2 License
    url: https://github.com/bufdemo/openapi-examples/blob/master/LICENSE
  version: v2
paths:
  /goodbye.v1.GoodbyeService/SayGoodbye:
    get:
      tags:
        - goodbye.v1.GoodbyeService
      description: Says goodbye.
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
        - name: message
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goodbye.v1.SayGoodbyeRequest'
        - name: encoding
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encoding'
        - name: base64
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base64'
        - name: compression
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compression'
        - name: connect
          in: query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect-protocol-version'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goodbye.v1.SayGoodbyeResponse'
  /hello.v1.HelloService/SayHello:
    post:
      tags:
        - hello.v1.HelloService
      description: Says hello.
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hello.v1.SayHelloRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hello.v1.SayHelloResponse'
components:
  schemas:
    goodbye.v1.SayGoodbyeRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          maxLength: 100
          minLength: 3
          additionalProperties: false
      title: SayGoodbyeRequest
      additionalProperties: false
      description: The request message containing the user's name.
    goodbye.v1.SayGoodbyeResponse:
      type: object
      properties:
        message:
          type: string
          title: message
          additionalProperties: false
      title: SayGoodbyeResponse
      additionalProperties: false
      description: The response message containing the greetings
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    encoding:
      title: encoding
      enum:
        - proto
        - json
      description: Define which encoding or 'Message-Codec' to use
    base64:
      type: boolean
      title: base64
      description: Specifies if the message query param is base64 encoded, which may be required for binary data
    compression:
      title: compression
      enum:
        - identity
        - gzip
        - br
      description: Which compression algorithm to use for this request
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
    hello.v1.SayHelloRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          maxLength: 100
          minLength: 3
          additionalProperties: false
          description: The name of the user to say hello to.
        helloCount:
          exclusiveMaximum: false
          type: integer
          title: hello_count
          additionalProperties: false
          description: How many times to say hello.
      title: SayHelloRequest
      additionalProperties: false
      description: The request message containing the user's name.
    hello.v1.SayHelloResponse:
      type: object
      properties:
        message:
          type: string
          title: message
          additionalProperties: false
      title: SayHelloResponse
      additionalProperties: false
      description: The response message containing the greetings
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security: []
tags:
  - name: goodbye.v1.GoodbyeService
    description: The Goodbye service definition.
  - name: hello.v1.HelloService
    description: The greeting service definition.
